{"version":3,"sources":["localDataProvider.tsx","products/index.tsx","products/ProductList.tsx","products/ProductCreate.tsx","products/ProductEdit.tsx","authProvider.tsx","layout/Layout.tsx","AdminPanel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["products","id","name","cost","localDataProvider","getList","resource","params","console","log","Promise","resolve","data","total","getOne","dbProduct","forEach","p","getMany","getManyReference","update","resProduct","length","updateMany","create","productId","push","delete","updatedProducts","filter","deleteMany","list","props","List","title","Datagrid","TextField","source","EditButton","basePath","DeleteButton","Create","SimpleForm","TextInput","edit","Edit","disabled","authProvider","login","a","username","password","axios","post","res","code","reject","localStorage","setItem","response","status","Error","checkError","err","checkAuth","getItem","logout","removeItem","getIdentity","getPermissions","CustomSidebar","Sidebar","size","Layout","sidebar","AdminPanel","Admin","dataProvider","layout","Resource","options","label","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ac4c309.chunk.js","sourcesContent":["import { fetchUtils, DataProvider } from 'ra-core';\r\nimport axios from 'axios';\r\n\r\nlet products :any[] = [\r\n    {id:1,name:'product1',cost:200},\r\n    {id:2,name:'product2',cost:250},\r\n    {id:3,name:'product3',cost:300}\r\n ];\r\n\r\n\r\nconst localDataProvider:DataProvider = {\r\n    getList: (resource, params) => {\r\n        console.log('getList');\r\n        console.log('resource = ',resource);\r\n        console.log(params);\r\n        console.log('products',products)\r\n        return Promise.resolve({\r\n            data: products,\r\n            total:5\r\n        });\r\n    },\r\n\r\n    getOne: (resource, params) =>{\r\n        console.log('getOne');\r\n        console.log('resource = ',resource);\r\n        console.log(params);\r\n\r\n        let dbProduct = {id:params.id};\r\n\r\n        products.forEach(p => {\r\n            if(p.id == params.id){\r\n                dbProduct = {...p}\r\n            }\r\n        });\r\n        \r\n        return Promise.resolve({\r\n            data: dbProduct,\r\n        });\r\n    },\r\n    getMany: (resource, params) => {\r\n        console.log('getMany');\r\n        console.log('resource = ',resource);\r\n        console.log(params);\r\n        return Promise.resolve({\r\n            data: [],\r\n            total:5\r\n        });\r\n    },\r\n\r\n    getManyReference: (resource, params) => {\r\n        console.log('getManyReference');\r\n        console.log('resource = ',resource);\r\n        console.log(params);\r\n        return Promise.resolve({\r\n            data: [],\r\n            total:5\r\n        });\r\n    },\r\n\r\n    update: (resource, params) =>{\r\n        console.log('update');\r\n        console.log('resource = ',resource);\r\n        console.log('UPDATE PARAMS DATA',params.data );\r\n\r\n        let resProduct = {id:1};\r\n        let index =  0;\r\n        for (let p = 0; p < products.length; p++) {\r\n            if(products[p].id == params.data.id){\r\n                products[p] = {...params.data};\r\n                resProduct = products[p] ;\r\n            }\r\n        }\r\n        return Promise.resolve({\r\n            data: resProduct,\r\n        });\r\n        // return axios.post('http://localhost:5000/product/update/1').then(res=>{\r\n        //     console.log('res',res);\r\n        //     return {\r\n        //         data: res.data\r\n        //     }\r\n        // })\r\n    },\r\n\r\n    // simple-rest doesn't handle provide an updateMany route, so we fallback to calling update n times instead\r\n    updateMany: (resource, params) =>{\r\n        console.log('updateMany');\r\n        console.log('resource = ',resource);\r\n        console.log(params);\r\n        return Promise.resolve({\r\n            data: [],\r\n            total:5\r\n        });\r\n    },\r\n    create: (resource, params) =>{\r\n        console.log('create');\r\n        console.log('resource = ',resource);\r\n        console.log(params);\r\n        const productId = products.length + 1;\r\n        products.push({id:productId,...params.data});\r\n        return new Promise((resolve)=>{\r\n            return resolve({\r\n                data: products[products.length - 1]\r\n            });\r\n        })\r\n\r\n        // return axios.post('http://localhost:5000/product/create').then(res=>{\r\n        //     console.log(res);\r\n        //     return {\r\n        //         data: products[products.length - 1]\r\n        //     }\r\n        // })\r\n    },\r\n    delete: (resource, params) =>{\r\n        console.log('delete');\r\n        console.log('resource = ',resource);\r\n        console.log(params);\r\n        const updatedProducts = products.filter(p => p.id != params.id);\r\n        products = [... updatedProducts]\r\n        return Promise.resolve({\r\n            data: {id:params.id}\r\n        });\r\n    },\r\n    // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\r\n    deleteMany: (resource, params) =>{\r\n        console.log('deleteMany');\r\n        console.log('resource = ',resource);\r\n        console.log(params);\r\n        return Promise.resolve({\r\n            data: []\r\n        });\r\n    }\r\n};\r\n\r\nexport default localDataProvider;\r\n","import ProductList from './ProductList';\r\nimport ProducCreate from './ProductCreate';\r\nimport ProductEdit from './ProductEdit';\r\n\r\nexport default {\r\n    list: ProductList,\r\n    create: ProducCreate,\r\n    edit: ProductEdit,\r\n}","import React from 'react';\r\nimport {List,Datagrid,TextField,ListProps,EditButton,DeleteButton} from 'react-admin';\r\n\r\nexport default function ProductList (props:ListProps){\r\n\r\n    // console.log(props);\r\n    return (\r\n       <List title='Products' {...props}>\r\n           <Datagrid>\r\n                <TextField source='id' />\r\n                <TextField source='name' />\r\n                <TextField source='cost' />\r\n                <EditButton basePath='product' />\r\n                <DeleteButton basePath='product' />\r\n           </Datagrid>\r\n       </List>\r\n    );\r\n};","import React from 'react';\r\nimport {Create,SimpleForm,TextInput,ListProps,ReferenceInput,SelectInput ,required    } from 'react-admin';\r\n\r\nexport default function ProductCreate (props:ListProps){\r\n\r\n    console.log('ProductCreate Props = ',props);\r\n    return (\r\n      <Create title='Product Create' {...props} >\r\n          <SimpleForm>\r\n            <TextInput source=\"name\" />\r\n            <TextInput source=\"cost\" />\r\n          </SimpleForm>\r\n      </Create>\r\n    );\r\n};","import React from 'react';\r\nimport {Edit,SimpleForm,ListProps,ReferenceInput,SelectInput ,required ,TextInput   } from 'react-admin';\r\n\r\nexport default function ProductEdit (props:ListProps){\r\n\r\n    console.log('ProductEdit',props);\r\n    return (\r\n      <Edit title='Product edit' {...props}  >\r\n          <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <TextInput source=\"name\" />\r\n            <TextInput source=\"cost\" />\r\n          </SimpleForm>\r\n      </Edit>\r\n    );\r\n};","import {AuthProvider,} from 'react-admin';\r\nimport axios,{AxiosError} from 'axios';\r\n\r\ninterface UserData {\r\n    username:string,\r\n    password:string,\r\n}\r\n\r\nconst authProvider:AuthProvider = {\r\n    // authentication\r\n    login: async({ username, password }:UserData) =>  {\r\n        console.log('login');\r\n        try {\r\n            const res = await axios.post('https://appback.familymarket.md/v1/user/login',{ username, password });\r\n            // const res = await axios.post('http://localhost:5000/user/login',{ username, password });\r\n            console.log(res.data.code);\r\n            if(res.data.code === 50001){\r\n                // throw new Error('Login or password incorrect');\r\n                return Promise.reject('Login or password incorrect');\r\n            }else{\r\n                localStorage.setItem('isAuth','true');\r\n                return Promise.resolve();\r\n            }   \r\n        } catch (err) {\r\n            console.log(typeof err.response.status);\r\n            if(err.response.status === 401){\r\n                throw new Error('Login or password incorrect');\r\n            }\r\n\r\n            if(err.response.status < 200 || err.response.status >= 300){\r\n                throw new Error('Network error');\r\n            }\r\n        }\r\n    },\r\n    checkError: (err) => {\r\n        console.log(err);\r\n        return Promise.resolve()\r\n    },\r\n    checkAuth: () => {\r\n        console.log('Check auth');\r\n        // console.log('get isAuth ',localStorage.getItem('isAuth'));\r\n        if(localStorage.getItem('isAuth')){\r\n            // console.log('get isAuth ',localStorage.getItem('isAuth'));\r\n            return Promise.resolve();\r\n        }\r\n        // localStorage.setItem('isAuth','true')\r\n        // return Promise.resolve();\r\n        console.log('reject');\r\n        return Promise.reject();\r\n    },\r\n    logout: () => {\r\n        if(localStorage.getItem('isAuth')){\r\n            localStorage.removeItem('isAuth');\r\n        }\r\n        return Promise.resolve();\r\n        // return Promise.reject();\r\n    },\r\n    getIdentity: () => Promise.resolve({id:1,name:'username'}),\r\n    // authorization\r\n    getPermissions: () => Promise.resolve(),\r\n};\r\n\r\n// async function test (){\r\n//     const s = await authProvider.login({username:'ss',password:'ss'});\r\n//     console.log(s);\r\n// }   \r\n// test();\r\nexport default authProvider;","import * as React from 'react';\r\n// import { useSelector } from 'react-redux';\r\nimport { Layout, LayoutProps, Sidebar } from 'react-admin';\r\n// import AppBar from './AppBar';\r\nimport Menu from './Menu';\r\n// import { darkTheme, lightTheme } from './themes';\r\n// import { AppState } from '../types';\r\n\r\nconst CustomSidebar = (props: any) => <Sidebar {...props} size={200} />;\r\n\r\nexport default (props: LayoutProps) => {\r\n    // const theme = useSelector((state: AppState) =>\r\n    //     state.theme === 'dark' ? darkTheme : lightTheme\r\n    // );\r\n    return (\r\n        <Layout\r\n            {...props}\r\n            // appBar={AppBar}\r\n            sidebar={CustomSidebar}\r\n            // menu={Menu}\r\n            // theme={theme}\r\n        />\r\n    );\r\n};\r\n","import React,{useEffect} from 'react';\r\nimport { Admin, Resource } from 'react-admin';\r\nimport dataProvider from './myDataProvider';\r\nimport localDataProvider from './localDataProvider';\r\nimport products from './products';\r\nimport categories from './categories';\r\nimport authProvider from './authProvider';\r\nimport { Layout } from './layout';\r\n\r\n// const simpleProvider =  simpleRestProvider('https://appback.familymarket.md/v1');\r\nconst apiUrl = 'http://localhost:5000';\r\n\r\nexport default function AdminPanel (){\r\n    return (\r\n        <Admin \r\n            authProvider={authProvider}\r\n            // dataProvider={dataProvider(apiUrl)}\r\n            dataProvider={localDataProvider}\r\n            // dataProvider={simpleRestProvider('https://appback.familymarket.md/v1')}\r\n            // dataProvider={simpleRestProvider('https://appback.familymarket.md/health-check')}\r\n            // dataProvider={simpleRestProvider('https://appback.familymarket.md/v1/nomenclature/list')}\r\n            layout={Layout}\r\n        >\r\n             <Resource \r\n                name=\"product\" \r\n                {...products}\r\n                options={{ label: 'Products' }}\r\n            />\r\n\r\n            {/* <Resource \r\n                name=\"products\" \r\n                {...products}\r\n            /> */}\r\n\r\n            {/* <Resource \r\n                name=\"categories\" \r\n                {...categories}\r\n            /> */}\r\n        </Admin>\r\n    );\r\n};","import React from 'react';\nimport AdminPanel from './AdminPanel';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <AdminPanel />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}